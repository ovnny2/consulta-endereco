openapi: 3.0.0
servers:
  - url: http://{username}:{port}/{basePath}
    description: Study case API
    variables:
      username:
        default: base-url
        description: api de prova de teste wipro
      port:
        default: '8080'
      basePath:
        default: /v1
info:
  title: Documentação da API de consulta de preço do frete por macro-região do Brasil
  version: "0.0.1"
paths:
  /v1/consulta-enderecos:
    post:
      summary: Consulta de endereços a partir do CEP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreteRequest'
      responses:
        '200':
          description: Sucesso na consulta de endereço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    FreteRequest:
      type: object
      properties:
        cep:
          type: string
          description: CEP do endereço a ser consultado. Deve estar no formato "XXXXX-XXX"
      example:
        cep: "01001-000"
    FreteResponse:
      type: object
      properties:
        cep:
          type: string
          description: CEP do endereço consultado
        rua:
          type: string
          description: Nome da rua do endereço consultado
        complemento:
          type: string
          description: Complemento do endereço consultado
        bairro:
          type: string
          description: Bairro do endereço consultado
        cidade:
          type: string
          description: Cidade do endereço consultado
        estado:
          type: string
          description: Estado do endereço consultado
        precoFrete:
          type: string
          description: Preço do frete para o endereço consultado
      example:
        cep: "01001-000"
        rua: "Praça da Sé"
        complemento: "lado ímpar"
        bairro: "Sé"
        cidade: "São Paulo"
        estado: "SP"
        precoFrete: "R$ 10,00"
  responses:
    BadRequest:
      description: Erro na validação dos dados de entrada
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Mensagem de erro
                example: "Cep Inválido. Verifique os dados de entrada e tente novamente. Ex: 12345-678"
    NotFound:
      description: Endereço não encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Mensagem de erro
                example: "Cep não encontrado. Verifique os dados de entrada e tente novamente"
  parameters:
    parameterSchema:
      in: query
      name: parameterSchema
      description: Schema para parâmetros de consulta
      schema:
        type: object
        properties:
          colapsed:
            type: boolean
            description: Define se o parâmetro é expandido ou não
            default: false
      example:
        colapsed: false
    '.*':
      'x-expand-default': true